class MyQueue {
    private:
    stack<int> a,b;
public:
    MyQueue() {

    }
    
    void push(int x) {
        while(!b.empty())
        {
            int temp = b.top();
            a.push(temp);
            b.pop();
        }
        a.push(x);
    }
    //初版空间浪费，可以只在输出栈为空时将输入栈的数据放入输出栈中
    int pop() {
        while(!a.empty())
        {
            int temp = a.top();
            b.push(temp);
            a.pop();
        }
        int temp2 = b.top();
        b.pop();
        return temp2;
    }
    
    int peek() {
        int temp = pop();
        b.push(temp);
        return temp;
    }
    
    bool empty() {
        if(a.empty()&&b.empty())
        return true;
        else
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
